---
import { type CollectionEntry, getCollection, render } from "astro:content";
import NoteLayout from "@/layouts/NoteLayout.astro";
import CompletionBadge from "@/components/CompletionBadge.astro";
import TagBadge from "@/components/TagBadge.astro";
import { Separator } from "@/components/ui/separator";

export async function getStaticPaths() {
  const entries = await getCollection("notes");

  return entries.map((note) => {
    return {
      params: { slug: note.id },
      props: { note },
    };
  });
}

type Props = { note: CollectionEntry<"notes"> };

const { note } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(note);
---

<NoteLayout prev={remarkPluginFrontmatter.prev} next={remarkPluginFrontmatter.next}>
  <div class="flex-1 max-w-5xl overflow-y-auto mb-150">
    {/* Title */}
    <div class="px-6 mb-6">
      <h1 class="text-4xl font-bold tracking-tight">
        {remarkPluginFrontmatter.title}
      </h1>
      <div
        class="mt-2 flex flex-wrap items-center gap-4 text-sm text-muted-foreground"
      >
        <div class="flex w-full gap-2">
          {note.data.tags.map((tag) => <TagBadge tag={tag} />)}
          {
            note.data.tags.length > 0 && (
              <span>
                <Separator orientation="vertical" />
              </span>
            )
          }
          <CompletionBadge completion={note.data.complete} />
        </div>
      </div>
    </div>
    <hr />
    {/* Main Content */}
    <div class="flex flex-col wrap-break-word gap-3 px-6 mt-4">
      <Content />
    </div>
  </div>
</NoteLayout>
